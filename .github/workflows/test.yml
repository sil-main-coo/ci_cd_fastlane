name: test
on:
  push:
    branches:
      - main
jobs:
  build_apk:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup Java
      uses: actions/setup-java@v1
      with:
        java-version: '8'
    - name: Install Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '2.8.1'
        channel: 'stable'
    - name: Install Android Gems
      working-directory: ${{ github.workspace }}/android
      run: bundle install

    - name: Flutter clean
      working-directory: ${{ github.workspace }}
      run: flutter clean

    - name: Flutter get
      working-directory: ${{ github.workspace }}
      run: flutter pub get

    - name: Decode Keystore
      run: echo "${{ secrets.KEYSTORE }}" | base64 --decode > ${{ github.workspace }}/android/key.jks

    - name: Set up key.properties
      working-directory: ${{ github.workspace }}
      run: |
        echo keyPassword=\${{ secrets.SIGNING_STORE_PASSWORD }} > ${{env.PROPERTIES_PATH}}
        echo storePassword=\${{ secrets.SIGNING_KEY_PASSWORD }} >> ${{env.PROPERTIES_PATH}}
        echo keyAlias=\${{ secrets.SIGNING_KEY_ALIAS }} >> ${{env.PROPERTIES_PATH}}
      env:
        PROPERTIES_PATH: "${{ github.workspace }}/android/key.properties"

#    - name: Increment Android version
#      working-directory: ${{ github.workspace }}/android
#      run: bundle exec fastlane increment_android_version_code

    - name: Build APK
      working-directory: ${{ github.workspace }}
      run: flutter build apk

    - name: Create Firebase Service Credentials file
      run: |
        echo "$FIREBASE_CREDENTIALS" > firebase_credentials.json.b64
        base64 -d -i firebase_credentials.json.b64 > "${{ github.workspace }}/android/firebase_credentials.json"
      env:
        FIREBASE_CREDENTIALS: ${{ secrets.FIREBASE_CREDENTIALS }}

    - name: Distribute Android Beta App
      working-directory: ${{ github.workspace }}/android
      run: bundle exec fastlane distribute_android_app
      env:
        FIREBASE_APP_ID_ANDROID: ${{ secrets.FIREBASE_APP_ID_ANDROID }}



  build_ipa:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '8'
      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '2.8.1'
          channel: 'stable'

      - name: Install iOS Gems
        working-directory: ${{ github.workspace }}/ios
        run: bundle install

      - name: Install iOS Certificate and Profile
        working-directory: ${{ github.workspace }}/ios
        run: bundle exec fastlane install_certificate_and_profile
        env:
          APP_STORE_CONNECT_KEY_ID: ${{ secrets.APP_STORE_CONNECT_KEY_ID }}
          APP_STORE_CONNECT_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
          APP_STORE_CONNECT_KEY_CONTENT: ${{ secrets.APP_STORE_CONNECT_KEY_CONTENT }}
          TEMP_KEYCHAIN_USER: ${{ secrets.TEMP_KEYCHAIN_USER }}
          TEMP_KEYCHAIN_PASSWORD: ${{ secrets.TEMP_KEYCHAIN_PASSWORD }}
          GIT_AUTHORIZATION: ${{ secrets.GIT_AUTHORIZATION }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}

      - name: Create Firebase Service Credentials file
        run: |
          echo "$FIREBASE_CREDENTIALS" > firebase_credentials.json.b64
          base64 -d -i firebase_credentials.json.b64 > "${{ github.workspace }}//ios/firebase_credentials.json"
        env:
          FIREBASE_CREDENTIALS: ${{ secrets.FIREBASE_CREDENTIALS }}

      - name: Build IPA
        working-directory: ${{ github.workspace }}
        run: flutter build ipa --export-options-plist=ExportOptions.plist

      - name: Distribute iOS Beta App
        working-directory: ${{ github.workspace }}/ios
        run: bundle exec fastlane distribute_ios_app
        env:
          FIREBASE_APP_ID_IOS: ${{ secrets.FIREBASE_APP_ID_IOS }}
